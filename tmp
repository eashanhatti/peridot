axiom OrderingC: Code(Type)
metadef Ordering = ~OrderingC
axiom gtC: Code(Ordering)
metadef gt = ~gtC
axiom ltC: Code(Ordering)
metadef lt = ~ltC
axiom eqC: Code(Ordering)
metadef eq = ~eqC

def ORD: Type = Struct {
  T: Type,
  compare: Fun(T, T) -> Ordering
}

def BoolOrd: ORD = struct {
  T = Bool,
  compare = fun(b1, b2) =>
    if b1 {
      if b2 {
        eq /* true == true */
      } else {
        gt /* true > false */
      }
    } else {
      if b2 {
        lt /* false < true */
      } else {
        eq /* false == false */
      }
    }
}
