let {
	assume Nat : MType;
	assume zero : Nat;
	assume succ : [_ : Nat] -> Nat;

	atomicformula IsNat : [_ : Nat] -> Prop {
		is_nat : all \n{ (impl (disj (equal n zero) some m, (equal n <succ m>)) <IsNat n>) };
	};

	atomicformula P : [_ : Nat] -> Prop {
		p : all n, (impl <IsNat n> <P n>);
	};

	prove <IsNat zero>;
} in {
	OType
}
