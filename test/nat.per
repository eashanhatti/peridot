/*
The `Nat` datatype, showcasing dependent structs. The type of the `data` field is dependent on the value of the `tag` field. If `tag = true`, `data : Struct {}` (`Struct {}` is essentially the unit type), and if `tag = false`, `data : Nat`
*/
def Nat
  : Type
  = Struct {
      tag: Bool,
      data:
        if tag {
          Struct {}
        } else {
          Nat
        }
    }

/* Constructing dependent structs */
def zero
  : Nat
  = struct {
      tag = true,
      data = struct {}
    }

/* Constructing dependent structs */
def succ
  : Fun(Nat) -> Nat
  = fun(n) =>
      struct {
        tag = false,
        data = n
      }

/* The `add` function, showcasing dependently typed `if`. The typechecker knows that in the first branch `n.data : Struct {}` (because `maybe.tag = true`). In the second branch, the typechecker knows that `n.data : A` (because maybe.tag = false) */
def add
  : Fun(Nat, Nat) -> Nat
  = fun(n, m) =>
      if n.tag {
        m
      } else {
        add(n.data, m)
      }
