define Maybe
  : Function(Type) -> Type
  = function(A) =>
      Record(
        tag : Bool,
        data :
          if(tag) {
            A
          } else {
            Record()
          }
      );

define nothing
  : Function(A : Type) -> Maybe(A)
  = function(_) =>
      record(
        tag = false,
        data = record()
      );

define just
  : Function(A : Type, A) -> Maybe(A)
  = function(_, x) =>
      record(
        tag = true,
        data = x
      );

define map
  : Function(A : Type, Function(A) -> A, Maybe(A)) -> Maybe(A)
  = function(A, func, maybe) =>
      if(maybe.tag) {
        nothing(A)
      } else {
        just(A, maybe.data)
      };
