import c_compiler.per
import list.per
import pair.per
import sigma.per

prop CompilePTerm
	( Code(`A)
	, List(Pair(Sigma(Code(Type), metafun(t) => Code(t)), Text))
	, CTerm
	, List(CDecl))
axiom compile_var_p:
	CompilePTerm(`x, `ctx, var(`t), `d)
	:- Lookup(`ctx, `x, `t)
axiom compile_exfun_p:
	CompilePTerm(<fun(x) => ~`f(<x>)>, `ctx, `tm, `ds)
	:- forall(x: Code(?)) => CompilePTerm(~`f(x), cons(pair(sigma(?, x), "x")))
